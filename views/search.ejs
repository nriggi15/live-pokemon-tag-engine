<!-- views/search.ejs -->
<!DOCTYPE html>
<html lang="en">
<head>
  <title>Search Pok√©mon Cards</title>
  <link rel="stylesheet" href="/style.css" />
  <link rel="stylesheet" href="/css/bottom-nav.css" />

  <style>
    .search-controls {
      display: flex;
      align-items: center;
      gap: 10px;
      margin-bottom: 1rem;
    }

    @media (max-width: 600px) {
      .search-controls {
        flex-direction: column;
        align-items: stretch;
      }

      .search-bar {
        width: 100%;
      }

      .filter-toggle {
        width: 100%;
      }
    }

    @media (max-width: 768px) {
      #filterPanel > div {
        flex-direction: column;
      }

      #filterPanel select,
      #filterPanel label {
        width: 100%;
        max-width: 100%;
      }

      #filterPanel {
        padding: 0.5rem;
      }
    }

    @media (max-width: 480px) {
      #results-container {
        grid-template-columns: repeat(auto-fill, minmax(130px, 1fr));
      }
    }


    .search-bar {
      flex-grow: 1;
      padding: 0.5rem 1rem;
      border-radius: 8px;
      border: 1px solid #ccc;
      font-size: 1rem;
    }

    .filter-toggle {
      background: #444;
      color: white;
      padding: 0.5rem 1rem;
      border: none;
      border-radius: 8px;
      cursor: pointer;
    }

    #results-container {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
      gap: 12px;
      padding: 10px;
      position: relative; /* ‚ú® Enable relative context for previews */
      overflow: visible;  /* ‚ú® Allow previews to spill out */
      padding-bottom: 80px; /* Prevent cards from being hidden under nav */
     /*  min-height: 3000px; */
    }

    .card-inner {
      position: relative;
    }


    .card-preview:hover .hover-preview {
      display: block !important;
    }


    .card-preview {
      width: 150px;
      height: auto;
      display: flex;
      flex-direction: column;
      align-items: center;
      position: relative;
      z-index: 1; /* base layer for card */
      opacity: 0;
      transform: translateY(20px);
      transition: opacity 0.4s ease, transform 0.4s ease;
    }

    .card-preview.fade-in {
      opacity: 1;
      transform: translateY(0);
    }

    .card-preview:hover {
      z-index: 1000; /* bring this whole card above all others */
    }

    .hover-preview {
      display: none;
      position: absolute;
      top: 0;
      left: 100%;
      margin-left: 10px;
      z-index: 1001; /* stays above others even more */
      background: white;
      border: 2px solid #444;
      padding: 5px;
      border-radius: 10px;
      box-shadow: 0 4px 20px rgba(0,0,0,0.3);
      width: 300px;
    }

    .card-preview.mirror .hover-preview {
      left: auto;
      right: 100%;
      margin-left: 0;
      margin-right: 10px;
    }

    .card-preview.vertical-flip .hover-preview {
      top: auto;
      bottom: 100%;
      margin-top: 0;
      margin-bottom: 10px;
    }

    #search-bar-container {
      display: flex;
      flex-wrap: wrap;
      gap: 8px;
      padding: 10px;
      justify-content: center;
    }

    #searchInput {
      flex: 1 1 250px;
      min-width: 0;
    }


    #filterBtn {
      flex: 0 0 auto;
    }

    @media (max-width: 768px) {
      #filterPanel {
        display: none; /* or auto-collapse it */
        display: none !important;
      }
      #results-container {
        grid-template-columns: repeat(2, 1fr);
      }
    }



    .spinner {
      border: 4px solid #f3f3f3;
      border-top: 4px solid #888;
      border-radius: 50%;
      width: 30px;
      height: 30px;
      animation: spin 0.8s linear infinite;
      margin: 0 auto;
    }

    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }

    body {
      margin: 0;
      overflow-x: hidden;
    }


  </style>

</head>
<body>

 <div class="container">
    <h1>üîç Pok√©mon Card Search</h1>

    <div class="search-controls">
      <input type="text" id="searchInput" class="search-bar" placeholder="Search cards by name, tags, or filter..." />
<!--<div id="react-test-container"></div> -->
      <button id="filterBtn" class="filter-toggle">Filters</button>
    </div>

    <div id="filterPanel" style="display: none; margin-bottom: 1rem;">
      <h3>Search Filters</h3>

      <div style="display: flex; flex-wrap: wrap; gap: 1rem;">
        <div>
          <label><strong>Supertype</strong></label><br>
          <label><input type="checkbox" name="cardType" value="Pok√©mon"> Pok√©mon</label><br>
          <label><input type="checkbox" name="cardType" value="Trainer"> Trainer</label><br>
          <label><input type="checkbox" name="cardType" value="Energy"> Energy</label>
        </div>

        <div>
          <label><strong>Format</strong></label><br>
          <select id="formatSelect">
            <option value="">Any</option>
            <option value="standard">Standard</option>
            <option value="expanded">Expanded</option>
            <option value="unlimited">Unlimited</option>
          </select>
        </div>

        <div>
          <label><strong>Type</strong></label><br>
          <select id="typeSelect">
            <option value="">Any</option>
            <option value="Fire">Fire</option>
            <option value="Water">Water</option>
            <option value="Psychic">Psychic</option>
            <option value="Grass">Grass</option>
            <option value="Lightning">Lightning</option>
            <option value="Fighting">Fighting</option>
            <option value="Darkness">Darkness</option>
            <option value="Metal">Metal</option>
            <option value="Fairy">Fairy</option>
            <option value="Dragon">Dragon</option>
            <option value="Colorless">Colorless</option>
          </select>
        </div>

        <div>
          <label><strong>Rarity</strong></label><br>
          <select id="raritySelect">
            <option value="">Any</option>
            <option value="Common">Common</option>
            <option value="Uncommon">Uncommon</option>
            <option value="Rare">Rare</option>
            <option value="Rare Holo">Rare Holo</option>
            <option value="Rare Holo EX">Rare Holo EX</option>
            <option value="Promo">Promo</option>
          </select>
        </div>

        <div>
          <label><strong>Set</strong></label><br>
          <select id="setSelect" style="width: 180px;">
            <option value="">Any</option>
            <!-- Dynamically filled -->
          </select>
        </div>


        <div>
          <label><strong>Artist</strong></label><br>
          <select id="artistSelect" style="width: 200px;">
            <option value="">Any</option>
            <!-- Dynamically filled -->
          </select>
        </div>

      </div>

      <div>
        <label><strong>Sort By</strong></label><br>
        <select id="sortSelect">
          <option value="">Default</option>
          <option value="name">Name (A‚ÄìZ)</option>
          <option value="hp">HP (High to Low)</option>
          <option value="released">Release Date (Newest First)</option>
          <option value="price">Market Price (High to Low)</option>

        </select>
      </div>




    </div>


    <div id="results-container">
      <!-- Cards will load here -->
    </div>

    

    
    <!-- //Loading Spinner -->
    <div id="loading-spinner" style="display: none; text-align: center; padding: 20px;">
      <div class="spinner"></div>
    </div>

    <div id="end-of-results" style="display: none; text-align: center; padding: 20px; color: #888;">
      You've reached the end of the results.
    </div>



  </div>

      <!-- Bottom Navigation Bar -->

  <script type="module" src="/js/script.js"></script>
  <script src="/js/advanced-search.js"></script>
  <!-- <script type="module" src="/js/react/assets/main-U_irmcaW.js"></script> -->

<script>
  const saveSearchURL = () => {
    try {
      localStorage.setItem('lastSearchURL', window.location.href);
    } catch (err) {
      console.warn('Could not save search URL:', err);
    }
  };

  document.addEventListener('DOMContentLoaded', () => {
    const links = document.querySelectorAll('#results-container a[href^="/card/"]');
    links.forEach(link => {
      link.addEventListener('pointerdown', saveSearchURL); // triggers earlier than click
    });
  });
</script>



</body>
</html>
