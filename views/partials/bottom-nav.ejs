<!-- /views/partials/bottom-nav.ejs -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />
<link rel="stylesheet" href="/css/bottom-nav.css" />

<nav class="bottom-nav">
<a href="#" class="nav-item" title="Tags" onclick="togglePanel('tagsPanel')">
  <i class="fas fa-tags"></i>
</a>
  <a href="#" class="nav-item" title="Account" onclick="togglePanel('accountPanel')">
    <i class="fas fa-user"></i>
  </a>
  <a href="/" class="nav-item" title="Home">
    <i class="fas fa-home"></i>
  </a>
  <a href="/explore" class="nav-item" title="Explore">
    <i class="fas fa-compass"></i>
  </a>
  <a href="#" class="nav-item" title="More" onclick="togglePanel('morePanel')">
    <i class="fas fa-ellipsis-h"></i>
  </a>
</nav>

<!-- Account Panel -->
<div class="nav-panel" id="accountPanel">
  <% if (isLoggedIn) { %>
    <a href="/dashboard">Dashboard</a>
    <a href="#" id="myProfileBtn">My Profile</a>
    <% if (role === 'moderator' || role === 'admin') { %>
      <a href="/moderator-hub" id="modLink">Moderator Hub</a>
    <% } %>
    <% if (role === 'admin') { %>
      <a href="/admin-panel" id="adminLink">Admin Panel</a>
    <% } %>
    <button id="logoutBtn">Logout</button>
  <% } else { %>
    <a href="/login" id="loginBtn">🔐 Login</a>
    <a href="/register" id="regsterBtn">⚙️ Register</a>
  <% } %>
</div>

<!-- More Panel -->
<div class="nav-panel" id="morePanel">
  <button id="toggleDarkModeBtn">🌓 Toggle Dark Mode</button>
    <% if (page === 'index') { %>
      <button id="openTagStats">📊 View Tag Usage</button>
    <% } %>
  <a href="https://discord.gg/h8ha9489tr" target="blank">📡 Join our Discord!</a>
  <a href="/about">📘 About CardVerse</a>

</div>

<div class="nav-panel" id="tagsPanel">
  <a href="/tagging-center">🔖 Tagging Center</a>
  <a href="/search">🔍 Card Search</a>
</div>

<form id="logoutForm" action="/api/logout" method="GET" style="display: none;"></form>




<!-- Login Popup -->
<div id="loginModal" style="display: none; position: fixed; top: 20vh; left: 50%; transform: translateX(-50%);
  background: white; border-radius: 10px; padding: 1rem; z-index: 9999; width: 300px; box-shadow: 0 4px 20px rgba(0,0,0,0.3);">
  <h3 style="margin-top: 0;">🔐 Login</h3>
  <form id="loginPopupForm">
    <input type="email" name="email" placeholder="Email" required style="width: 100%; margin-bottom: 0.5rem;" />
    <input type="password" name="password" placeholder="Password" required style="width: 100%; margin-bottom: 0.5rem;" />
    <button type="submit" style="width: 100%; padding: 6px 0;">Log In</button>
    <p id="loginPopupError" style="color: red; font-size: 0.85rem;"></p>
  </form>
</div>

<div id="overlay" style="display: none; position: fixed; top: 0; left: 0; width: 100vw; height: 100vh;
  background: rgba(0,0,0,0.5); z-index: 9998;" onclick="closeLoginModal()">
</div>






<script>
  let openPanelId = null;

  function togglePanel(id) {
    const panel = document.getElementById(id);

    const isOpen = panel.style.display === 'flex';

    // Close all panels
    document.querySelectorAll('.nav-panel').forEach(p => p.style.display = 'none');

    // Toggle the selected one
    if (!isOpen) {
      panel.style.display = 'flex';
      openPanelId = id;
    } else {
      openPanelId = null;
    }
  }

  // Close panel on outside click
  document.addEventListener('click', (e) => {
    if (!e.target.closest('.nav-panel') && !e.target.closest('.nav-item')) {
      document.querySelectorAll('.nav-panel').forEach(p => p.style.display = 'none');
      openPanelId = null;
    }

/*       const isDark = localStorage.getItem('darkMode') === 'true';
      document.body.classList.toggle('dark-mode', isDark); */

      document.getElementById('toggleDarkModeBtn')?.addEventListener('click', () => {
        document.body.classList.toggle('dark-mode');
        localStorage.setItem('darkMode', document.body.classList.contains('dark-mode'));
      });

  });

  document.getElementById('logoutBtn')?.addEventListener('click', function () {
    document.getElementById('logoutForm').submit();
  });


//Login Popup
  function openLoginModal() {
    document.getElementById('loginModal').style.display = 'block';
    document.getElementById('overlay').style.display = 'block';
  }

  function closeLoginModal() {
    document.getElementById('loginModal').style.display = 'none';
    document.getElementById('overlay').style.display = 'none';
  }

  document.getElementById('loginBtn')?.addEventListener('click', function (e) {
    e.preventDefault();
    openLoginModal();

    // ✅ Collapse the account panel
    const accountPanel = document.getElementById('accountPanel');
    if (accountPanel) {
      accountPanel.style.display = 'none';
    }
  });


  document.getElementById('loginPopupForm')?.addEventListener('submit', async (e) => {
    e.preventDefault();
    const form = e.target;
    const email = form.email.value.trim();
    const password = form.password.value.trim();

    try {
      const res = await fetch('/api/login', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ email, password })
      });

      const result = await res.json();

      if (res.ok) {
        window.location.reload(); // ✅ Start session and refresh
      } else {
        document.getElementById('loginPopupError').textContent = result.message || 'Login failed';
      }
    } catch (err) {
      console.error('Login error:', err);
      document.getElementById('loginPopupError').textContent = 'Unexpected error during login';
    }
  });

  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape') {
      // Close login modal if open
      const loginModal = document.getElementById('loginModal');
      const overlay = document.getElementById('overlay');

      if (loginModal?.style.display === 'block') {
        loginModal.style.display = 'none';
        overlay.style.display = 'none';
      }

      // Close all open panels
      document.querySelectorAll('.nav-panel').forEach(panel => {
        panel.style.display = 'none';
      });
      openPanelId = null;
    }
  });

</script>